#code parts used from
#https://github.com/esphome/feature-requests/issues/1109#issuecomment-1059808670
#https://github.com/kotope/esphome_eink_dashboard
#https://gist.github.com/Plawasan/4ae826b05aaa7812f3a191714ca47a50
#https://github.com/hanspeda/esphome_homeassistant_display/blob/aa3692f4f687b46d6d0564f673cf51bfa3225d60/esphome-web-399610.yaml

#run and sleep times
substitutions:
  run_time: 1min #can be as long as needed to get data 
  sleep_time: 20min # normal sleep time
  night_sleep_time: 7h # 1st sleep time after midnight

esphome:
  name: battery
  friendly_name: Battery

esp32:
  board: esp32dev
  framework:
    type: esp-idf

# Enable logging
logger:

api:
  encryption:
    key: "TSWyewroqBqebbdmrldf+zROi+hH/O0PEWJPUs4Jhew="

ota:
  - platform: esphome
    password: "af02dabd1a628b113fb6ffc6c6a94c17"

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  ap:
    ssid: "Battery Fallback Hotspot"
    password: "BDVDN7O0KT7E"

captive_portal:

deep_sleep:
  run_duration: ${run_time} 
  sleep_duration: ${sleep_time}
  id: deep_sleep_1
  esp32_ext1_wakeup:
    pins: GPIO39
    mode: ALL_LOW

font:
  - file: "fonts/TEMPSITC.TTF"
    id: my_font
    size: 30
  - file: "fonts/GILSANUB.TTF"
    id: GILSANUB
    size: 38
  - file: "fonts/GILSANUB.TTF"
    id: small
    size: 14

image:
  - file: "icons/partly_cloudy.bmp"
    id: icon_partlycloudy
    type: BINARY
    resize: 24x24
    invert_alpha: true
  - file: "icons/House.bmp"
    id: icon_inside
    type: BINARY
    resize: 34x34
    invert_alpha: false
  - file: "icons/Outside.bmp"
    id: icon_tree
    type: BINARY
    resize: 42x42
    invert_alpha: true

# SPI bus for E-Ink display
spi:
  clk_pin: GPIO18
  mosi_pin: GPIO23

sensor:
  # Outside Pressure
  - platform: homeassistant
    id: forecast_pressure
    entity_id: sensor.forcast_pressure

  # Outside Humidity
  - platform: homeassistant
    id: humidity_outside
    entity_id: sensor.indoor_outdoor_meter_0a71_humidity

  # Outdoor Temperature
  - platform: homeassistant
    id: temperature_outside
    entity_id: sensor.indoor_outdoor_meter_0a71_temperature

  # Zach's Office Pressure
  - platform: homeassistant
    id: pressure_printer
    entity_id: sensor.convert_printer_pressure_to_inhg

  # Zach's Office Humidity
  - platform: homeassistant
    id: humidity_printer
    entity_id: sensor.printer_barometer_humidity

  # Zach's Office Temperature
  - platform: homeassistant
    id: temperature_printer
    entity_id: sensor.printer_barometer_temperature

  # --- ADC pin voltage on GPIO36 (after divider) ---
  - platform: adc
    id: adc_pin_v
    name: "ADC Pin Voltage (GPIO36)"
    pin: GPIO36
    attenuation: 12db
    internal: true
    update_interval: 5min
    accuracy_decimals: 2
    filters:
      - sliding_window_moving_average:
          window_size: 10
          send_every: 1

    #refresh
    on_value: # Actions to perform once data for the last sensor has been received
      then:
        - script.execute: all_data_received

text_sensor:
  - platform: homeassistant
    id: forecast_condition
    entity_id: weather.forecast_home
    on_value:
      then:
        - script.execute: all_data_received

time:
  - platform: homeassistant
    id: home_time

script:
  - id: all_data_received
    then:
      - component.update: epd
      - delay: 5s        # give the e-paper time to finish
      - script.execute: enter_sleep

  - id: enter_sleep
    then:
      - if:
          condition:
            lambda: |-
              auto time = id(home_time).now();
              if (!time.is_valid()) {
                return false;
              }
              return (time.hour < 6);
          then:
            - logger.log: "It's nighttime, entering long sleep for ${night_sleep_time}"
            - deep_sleep.enter:
                id: deep_sleep_1
                sleep_duration: ${night_sleep_time}
          else:
            - logger.log: "It's daytime, entering short sleep for ${sleep_time}"
            - deep_sleep.enter:
                id: deep_sleep_1
                sleep_duration: ${sleep_time}

display:
  - platform: waveshare_epaper
    id: epd
    model: 2.90inv2-r2
    reset_duration: 2ms
    rotation: 90째
    cs_pin: GPIO15
    dc_pin: GPIO17
    busy_pin: GPIO4
    reset_pin: GPIO16
    full_update_every: 2
    update_interval: never
    lambda: |-
      static const int IMAGE_HORIZONTAL = 10;
      static const int TEMP_HORIZONTAL = IMAGE_HORIZONTAL + 40;
      static const int HUMIDITY_HORIZONTAL = TEMP_HORIZONTAL + 110;
      static const int PRESURE_HORIZONTAL = HUMIDITY_HORIZONTAL + 65;
      static const int OUTSIDE_TEMP_VERT = 15;
      static const int OUTSIDE_TEXT_VERT = OUTSIDE_TEMP_VERT + 9;
      static const int INSIDE_TEMP_VERT = OUTSIDE_TEMP_VERT + 53;
      static const int INSIDE_TEXT_VERT = INSIDE_TEMP_VERT + 9;

      it.strftime(5, 2, id(small), TextAlign::TOP_LEFT, "%H:%M:%S", id(home_time).now());
      it.printf(TEMP_HORIZONTAL, OUTSIDE_TEMP_VERT, id(GILSANUB), TextAlign::TOP_LEFT, "%.0f째", id(temperature_outside).state);
      it.printf(HUMIDITY_HORIZONTAL, OUTSIDE_TEXT_VERT, id(my_font), TextAlign::TOP_LEFT, "%.0f%%", id(humidity_outside).state);
      it.printf(PRESURE_HORIZONTAL, OUTSIDE_TEXT_VERT, id(my_font), TextAlign::TOP_LEFT, "%.1f", id(forecast_pressure).state);
      it.printf(HUMIDITY_HORIZONTAL, INSIDE_TEXT_VERT, id(my_font), TextAlign::TOP_LEFT, "%.0f%%", id(humidity_printer).state);
      if (!isnan(id(temperature_printer).state)) {
        it.printf(TEMP_HORIZONTAL, INSIDE_TEMP_VERT, id(GILSANUB), TextAlign::TOP_LEFT, "%.0f째", id(temperature_printer).state);
      } else {
        it.print(TEMP_HORIZONTAL, INSIDE_TEMP_VERT, id(GILSANUB), TextAlign::TOP_LEFT, "--째");
      }
      it.printf(PRESURE_HORIZONTAL, INSIDE_TEXT_VERT, id(my_font), TextAlign::TOP_LEFT, "%.1f", id(pressure_printer).state); // mmHg

      it.image(IMAGE_HORIZONTAL, INSIDE_TEMP_VERT + 5, id(icon_inside));
      it.image(IMAGE_HORIZONTAL - 3, OUTSIDE_TEMP_VERT + 5, id(icon_tree));
