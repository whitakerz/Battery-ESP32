esphome:
  name: battery
  friendly_name: Battery

esp32:
  board: esp32dev
  framework:
    type: esp-idf

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: "TSWyewroqBqebbdmrldf+zROi+hH/O0PEWJPUs4Jhew="

ota:
  - platform: esphome
    password: "af02dabd1a628b113fb6ffc6c6a94c17"

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Battery Fallback Hotspot"
    password: "BDVDN7O0KT7E"

captive_portal:
  
# SPI bus for E-Ink display
spi:
  clk_pin: GPIO18
  mosi_pin: GPIO23

font:
  - file: "fonts/TEMPSITC.TTF"
    id: my_font
    size: 30
  
  - file: "fonts/GILSANUB.TTF"
    id: GILSANUB
    size: 38

image:
  - file: "icons/partly_cloudy.bmp"
    id: icon_partlycloudy
    type: BINARY
    resize: 24x24
    invert_alpha: true
  
  - file: "icons/House.bmp"
    id: icon_inside
    type: BINARY
    resize: 34x34
    invert_alpha: FALSE

  - file: "icons/Outside.bmp"
    id: icon_tree
    type: BINARY
    resize: 42x42
    invert_alpha: true
  # Add other icons as needed

# Pull sensors from Home Assistant
sensor:
  # Outside Pressure
  - platform: homeassistant
    id: forecast_pressure
    entity_id: sensor.forcast_pressure

  # Outside Humidity
  - platform: homeassistant
    id: humidity_outside
    entity_id: sensor.indoor_outdoor_meter_0a71_humidity

  # Outdoor Temperature
  - platform: homeassistant
    id: temperature_outside
    entity_id: sensor.indoor_outdoor_meter_0a71_temperature

  # Zach's Office Pressure
  - platform: homeassistant
    id: pressure_printer
    entity_id: sensor.convert_printer_pressure_to_inhg

  # Zach's Office Humidity
  - platform: homeassistant
    #test
    id: humidity_printer
    entity_id: sensor.printer_barometer_humidity

  # Zach's Office Temperature
  - platform: homeassistant
    id: temperature_printer
    entity_id: sensor.printer_barometer_temperature

text_sensor:
  - platform: homeassistant
    id: forecast_condition
    entity_id: weather.forecast_home

# Display configuration
display:
  - platform: waveshare_epaper
    model: 2.90inv2-r2
    rotation: 90째
    cs_pin: GPIO15
    dc_pin: GPIO17
    busy_pin: GPIO4
    reset_pin: GPIO16
    full_update_every: 30
    update_interval: 60s
    lambda: |-
      static const int IMAGE_HORIZONTAL = 10;
      static const int TEMP_HORIZONTAL = IMAGE_HORIZONTAL + 40;
      static const int HUMIDITY_HORIZONTAL = TEMP_HORIZONTAL + 110;
      static const int PRESURE_HORIZONTAL = HUMIDITY_HORIZONTAL + 65;
      static const int OUTSIDE_TEMP_VERT = 15;
      static const int OUTSIDE_TEXT_VERT = OUTSIDE_TEMP_VERT + 9;
      static const int INSIDE_TEMP_VERT = OUTSIDE_TEMP_VERT + 53;
      static const int INSIDE_TEXT_VERT = INSIDE_TEMP_VERT + 9;   

     
      //it.strftime(5, 5, id(my_font), TextAlign::TOP_LEFT, "%H:%M:%S", id(home_time).now());
      it.printf(TEMP_HORIZONTAL, OUTSIDE_TEMP_VERT, id(GILSANUB), TextAlign::TOP_LEFT, "%.0f째", id(temperature_outside).state);
      it.printf(HUMIDITY_HORIZONTAL, OUTSIDE_TEXT_VERT, id(my_font), TextAlign::TOP_LEFT, "%.0f%%", id(humidity_outside).state);
      it.printf(PRESURE_HORIZONTAL, OUTSIDE_TEXT_VERT, id(my_font), TextAlign::TOP_LEFT, "%.1f", id(forecast_pressure).state);
      it.printf(HUMIDITY_HORIZONTAL, INSIDE_TEXT_VERT, id(my_font), TextAlign::TOP_LEFT, "%.0f%%", id(humidity_printer).state);
      if (!isnan(id(temperature_printer).state)) {
        it.printf(TEMP_HORIZONTAL, INSIDE_TEMP_VERT, id(GILSANUB), TextAlign::TOP_LEFT, "%.0f째", id(temperature_printer).state);
      } else {
        it.print(TEMP_HORIZONTAL, INSIDE_TEMP_VERT, id(GILSANUB), TextAlign::TOP_LEFT, "--째");
      }
      it.printf(PRESURE_HORIZONTAL, INSIDE_TEXT_VERT, id(my_font), TextAlign::TOP_LEFT, "%.1f", id(pressure_printer).state); // mmHg

      it.image(IMAGE_HORIZONTAL, INSIDE_TEMP_VERT + 5, id(icon_inside));
      it.image(IMAGE_HORIZONTAL - 3, OUTSIDE_TEMP_VERT + 5, id(icon_tree));    